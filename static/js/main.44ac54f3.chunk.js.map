{"version":3,"sources":["components/Header.js","App.js","serviceWorker.js","index.js"],"names":["styled","div","h1","StyledHeader","header","h2","footer","Header","className","href","src","type","id","htmlFor","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"kxcAGkBA,IAAOC,IAAV,KAaDD,IAAOE,GAAV,KAbX,IAoBMC,EAAeH,IAAOI,OAAV,KAkQAJ,IAAOC,IAAV,KAkCDD,IAAOC,IAAV,KAwFMD,IAAOK,GAAV,KAOIL,IAAOC,IAAV,KAiGAD,IAAOC,IAAV,KAyDGD,IAAOM,OAAV,KAoGCN,IAAOC,IAAV,KA2CK,SAASM,IACtB,OACE,kBAACJ,EAAD,KACE,yBAAKK,UAAU,oBACb,yBAAKA,UAAU,mBACf,yBAAKA,UAAU,sBAGjB,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,aACb,uBAAGC,KAAK,KACN,yBAAKD,UAAU,eACb,gDACA,yBAAKE,IAAI,8BACT,gEAKN,yBAAKF,UAAU,aACb,yBAAKA,UAAU,YACb,2BAAOA,UAAU,qBAAqBG,KAAK,WAAWC,GAAG,aACzD,2BAAOJ,UAAU,sBAAsBK,QAAQ,YAC7C,0BAAML,UAAU,gBAChB,0BAAMA,UAAU,gBAChB,0BAAMA,UAAU,oBAGlB,yBAAKA,UAAU,QACb,uBAAGA,UAAU,0BAA0BC,KAAK,KAA5C,QACA,uBAAGD,UAAU,0BAA0BC,KAAK,YAA5C,kBACA,uBAAGD,UAAU,0BAA0BC,KAAK,aAA5C,YACA,uBAAGD,UAAU,0BAA0BC,KAAK,eAA5C,kBACA,uBAAGD,UAAU,0BAA0BC,KAAK,cAA5C,oBACA,uBAAGD,UAAU,0BAA0BC,KAAK,aAA5C,gBACA,uBAAGD,UAAU,0BAA0BC,KAAK,UAA5C,SACA,uBAAGD,UAAU,0BAA0BC,KAAK,YAA5C,mBC3tBCK,MARf,WACE,OACE,yBAAKN,UAAU,OACb,kBAACD,EAAD,QCKcQ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.44ac54f3.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from 'styled-components'\n\nconst Container = styled.div`\nwidth: $container-width;\nmargin: 0 auto;\n\n@media screen and (max-width: $transition-width-large) {\n  width: 80%;\n}\n\n@media screen and (max-width: $transition-width-mobile) {\n  width: 90%;\n}\n`\n\nconst Title = styled.h1`\nfont-family: 'Roboto', sans-serif;\nfont-weight: 800;\nfont-size: 2.5rem;\nletter-spacing: 0.5px;\n`\n\nconst StyledHeader = styled.header`\ndisplay: flex;\nflex-direction: column;\npadding: 0;\nwidth: 100%;\n\n@media screen and (max-width: $transition-width-mobile) {\n  display: flex;\n  justify-content: space-between;\n}\n\n.header-highlight {\n  display: flex;\n  height: 35px;\n\n  div {\n    display: inline-block;\n  }\n\n  .blue-highlight {\n    background-color: $dark-blue;\n    width: $margin-width;\n  }\n\n  .orange-highlight {\n    background-color: $ochre-yellow;\n    width: 100% - $margin-width;\n  }\n}\n\n.header-logo-nav {\n  @media screen and (max-width: $transition-width-mobile) {\n    display: flex;\n  }\n\n  .header-logo {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    margin: 1.5rem 0;\n\n    @media screen and (max-width: $transition-width-mobile) {\n      flex-wrap: wrap;\n      margin: 1rem 0 0 0.5rem;\n      justify-content: center;\n      text-align: center;\n    }\n\n    h1 {\n      color: $dark-blue;\n      margin: 1rem 0;\n      font-size: 2.5rem;\n      font-family: 'San Francisco Bold';\n      letter-spacing: 5.5px;\n\n      @media screen and (max-width: $transition-width-largest) {\n        font-size: 1.9rem;\n      }\n\n      @media screen and (max-width: $transition-width-large) {\n        font-size: 1.3rem;\n        letter-spacing: 2.5px;\n      }\n\n      @media screen and (max-width: $transition-width-mobile) {\n        font-size: 1rem;\n        margin: 0 0.5rem;\n      }\n\n      @media screen and (max-width: $transition-width-mobile-small) {\n        font-size: 0.6rem;\n      }\n    }\n\n    img {\n      margin: 1rem 0;\n      width: 100px;\n\n      @media screen and (max-width: $transition-width-largest) {\n        width: 80px;\n      }\n\n      @media screen and (max-width: $transition-width-large) {\n        width: 60px;\n      }\n\n      @media screen and (max-width: $transition-width-mobile) {\n        width: 40px;\n        margin: 0.5rem;\n      }\n\n      @media screen and (max-width: $transition-width-mobile-small) {\n        margin: 0.2rem;\n      }\n    }\n\n    h2 {\n      font-weight: normal;\n      margin: 1rem 0;\n      font-family: 'San Francisco Medium';\n      letter-spacing: 3.8px;\n      font-size: 1.5rem;\n\n      @media screen and (max-width: $transition-width-largest) {\n        font-size: 1.1rem;\n      }\n\n      @media screen and (max-width: $transition-width-large) {\n        font-size: 0.9rem;\n        letter-spacing: 2px;\n      }\n\n      @media screen and (max-width: $transition-width-mobile) {\n        font-size: 0.7rem;\n        margin: 0;\n      }\n\n      @media screen and (max-width: $transition-width-mobile-small) {\n        font-size: 0.5rem;\n        margin: 0;\n      }\n    }\n  }\n\n  .nav-links {\n    width: 100%;\n    height: 4rem;\n    margin-top: 1rem;\n    display: flex;\n    justify-content: center;\n    align-items: flex-start;\n\n    @media screen and (max-width: $transition-width-mobile) {\n      padding: 0em;\n      margin: 1rem 1rem 0 0;\n    }\n\n    a {\n      &:hover,\n      &:focus,\n      &:active {\n        color: $ochre-yellow;\n      }\n    }\n\n    .dropdown {\n      width: 100%;\n      border-top: 1px solid black;\n      border-bottom: 1px solid black;\n\n      @media screen and (max-width: $transition-width-mobile) {\n        border: none;\n        z-index: 5;\n\n        .menu-btn:checked ~ .menu {\n          visibility: visible;\n          opacity: 1;\n        }\n      }\n\n      .hamburger {\n        display: none;\n\n        @media screen and (max-width: $transition-width-mobile) {\n          display: flex;\n          align-items: flex-end;\n        }\n      }\n\n      .menu-btn {\n        display: none;\n      }\n\n      .menu-btn:checked ~ .menu-icon {\n        .navicon-mid {\n          background: transparent;\n        }\n\n        .navicon-bottom {\n          transform: translateY(-9px) rotate(-45deg);\n        }\n\n        .navicon-top {\n          transform: translateY(9px) rotate(45deg);\n        }\n      }\n\n      .menu-icon {\n        cursor: pointer;\n        flex-direction: column;\n        padding: 0;\n\n        .navicon-top,\n        .navicon-mid,\n        .navicon-bottom {\n          background: black;\n          height: 3px;\n          width: 40px;\n          display: block;\n          margin: 3px 0;\n          transition: all .2s ease-out;\n        }\n\n        .navicon-mid {\n          transition: background .2s ease-out;\n        }\n      }\n\n      .menu {\n        width: 80%;\n        margin: 0 auto;\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n\n        @media screen and (max-width: $transition-width-mobile) {\n          line-height: 1.5em;\n          width: 100%;\n          background: white;\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n          visibility: hidden;\n          opacity: 0;\n          padding: 0;\n          margin-top: 0.5em;\n          border: 0.5px solid grey;\n          transition: visibility 0.25s, opacity 0.25s ease-in;\n        }\n\n        a.nav-item {\n          font-family: 'Roboto', sans-serif;\n          font-weight: 400;\n          text-align: center;\n          text-decoration: none;\n          padding: 1em 0.5em;\n          font-size: 1.3rem;\n\n          @media screen and (max-width: $transition-width-largest) {\n            font-size: 1rem;\n          }\n\n          @media screen and (max-width: $transition-width-large) {\n            font-size: 0.75rem;\n          }\n\n          @media screen and (max-width: $transition-width-mobile) {\n            font-size: 1rem;\n            padding: 0.5em 0;\n            width: 100%;\n          }\n        }\n      }\n    }\n  }\n}\n`\n\nconst AboutHome = styled.div`\nwidth: 100% - $margin-width;\n\n@media screen and (max-width: $transition-width-mobile) {\n  width: 100%;\n}\n\nh1 {\n  line-height: 3.5rem;\n  margin-top: $card-margin;\n\n  @media screen and (max-width: $transition-width-mobile) {\n    font-size: 2rem;\n    line-height: 2.2rem;\n    margin-top: $card-margin-mobile;\n  }\n}\n\n\np {\n  line-height: unset;\n  font-size: 1.5rem;\n  font-family: 'Roboto', sans-serif;\n  font-weight: 300;\n  margin: 0;\n\n  @media screen and (max-width: $transition-width-mobile) {\n    font-size: 1.5rem;\n    line-height: 2rem;\n    margin-bottom: 1rem;\n  }\n}\n`\n\nconst Cards = styled.div`\ndisplay: flex;\nflex-wrap: wrap;\nflex-shrink: 0;\njustify-content: space-between;\nmargin: -($card-margin / 2);\n\n@media screen and (max-width: $transition-width-large) {\n  justify-content: flex-start;\n}\n\n@media screen and (max-width: $transition-width-mobile) {\n  margin: -($card-margin-mobile / 2);\n}\n\n.card-col {\n  flex: 1 1 0px;\n  min-width: 300px;\n  margin: $card-margin/2;\n\n  @media screen and (max-width: $transition-width-large) {\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n\n  @media screen and (max-width: $transition-width-mobile) {\n    margin-left: $card-margin-mobile/2;\n    margin-right: $card-margin-mobile/2;\n  }\n\n  @media screen and (max-width: $transition-width-mobile-small) {\n    min-width: 250px;\n  }\n\n  .card {\n    height: 250px;\n    margin: $card-margin 0;\n    background: $dark-blue;\n\n    @media screen and (max-width: $transition-width-mobile) {\n      margin: $card-margin-mobile 0;\n    }\n\n    @media screen and (max-width: $transition-width-large) {\n      &:last-child {\n        margin-bottom: 0;\n      }\n    }\n\n    a {\n      display: flex;\n      color: white;\n      align-items: center;\n      justify-content: center;\n      height: 100%;\n\n      .card-icon {\n        max-width: 40%;\n        margin: 1rem 0 1rem 0rem;\n\n        @media screen and (max-width: $transition-width-large) {\n          max-width: 30%;\n        }\n      }\n\n      .card-info {\n        width: 50%;\n        margin: 1rem 2rem 1rem 0;\n\n        h3 {\n          font-family: 'Roboto', sans-serif;\n          font-weight: 800;\n          font-size: 1.5rem;\n          margin: 0 0 1rem;\n        }\n\n        p {\n          font-size: 1.2rem;\n          font-family: 'Roboto', sans-serif;\n          font-weight: 300;\n          margin: 0;\n        }\n      }\n    }\n  }\n}\n`\n\nconst SubTitle = styled.h2`\nmargin-top: 0;\nfont-family: 'Roboto', sans-serif;\nfont-weight: 500;\nfont-size: 2.5rem;\n`\n\nconst HomePosts = styled.div`\nbackground: $dark-blue;\nmargin: 4rem 0 0;\n\n.home-posts-content {\n  margin: 0 auto;\n  padding: 4rem 0;\n  width: $container-width;\n\n  h2 a {\n    color: white;\n\n    &:hover,\n    &:focus,\n    &:active {\n      color: $ochre-yellow;\n    }\n  }\n\n  .post-previews {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-around;\n\n    @media screen and (max-width: $transition-width-mobile) {\n      flex-direction: column;\n      align-items: center;\n    }\n\n    .post-preview {\n      max-width: 30%;\n\n      @media screen and (max-width: $transition-width-mobile) {\n        max-width: 100%;\n        margin-top: 3rem;\n        display: flex;\n        align-items: center;\n\n        &:first-child {\n          margin-top: 0;\n        }\n      }\n\n      img {\n        display: block;\n        margin: 0 auto;\n        height: 200px;\n\n        @media screen and (max-width: $transition-width-large) {\n          height: 150px;\n        }\n      }\n\n      h3,\n      p {\n        color: white;\n        font-size: 1.2rem;\n        font-family: 'Roboto', sans-serif;\n        font-weight: 300;\n        margin-bottom: 0.8rem;\n      }\n\n      p {\n        margin: 0;\n        font-size: 1rem;\n      }\n    }\n  }\n\n  .read-more {\n    display: flex;\n    justify-content: flex-end;\n\n    @media screen and (max-width: $transition-width-mobile) {\n      justify-content: center;\n    }\n\n    a {\n      color: white;\n      font-size: 1.2rem;\n      font-family: 'Roboto', sans-serif;\n      font-weight: 300;\n      display: inline-block;\n      margin-top: 3rem;\n      padding: 1rem;\n      border: 1px solid white;\n\n      &:hover,\n      &:focus,\n      &:active {\n        color: $ochre-yellow;\n      }\n    }\n  }\n}\n`\n\nconst SignUp = styled.div`\nmargin: 0 auto;\npadding: 5rem 0;\nwidth: $sign-up-width;\ntext-align: center;\n\n@media screen and (max-width: $transition-width-mobile) {\n  width: $sign-up-width-mobile;\n}\n\nh2 {\n  color: $dark-blue;\n  margin: 0;\n}\n\np,\ninput[type=submit] {\n  font-size: 1rem;\n  font-family: 'Roboto', sans-serif;\n  font-weight: 300;\n}\n\np {\n  margin-bottom: 2.5rem;\n  color: black;\n}\n\ninput[type=submit] {\n  position: relative;\n  top: -4px;\n  color: #fff;\n  background: $dark-blue;\n  border-radius: 3px;\n  padding: 12px 20px;\n\n  @media screen and (max-width: $transition-width-mobile) {\n    margin-top: 1rem;\n  }\n}\n\ninput[type=submit]:hover {\n  background: $light-blue;\n  color: black;\n}\n\ninput[type=text] {\n  padding: 5px 10px;\n  width: 60%;\n  margin-right: 12px;\n  font-size: 1.5rem;\n\n  @media screen and (max-width: $transition-width-mobile) {\n    width: 90%;\n  }\n}\n`\n\nconst Footer = styled.footer`\nbackground: $light-grey;\npadding: 2rem 0 6rem;\n\n@media screen and (max-width: $transition-width-mobile) {\n  padding: 2rem 0 4rem;\n}\n\n.footer-content {\n  width: 90%;\n  margin: 0 auto;\n  display: flex;\n  justify-content: space-evenly;\n  align-items: flex-end;\n  font-size: 1rem;\n  font-family: 'Roboto', sans-serif;\n  font-weight: 300;\n  letter-spacing: 1px;\n\n  @media screen and (max-width: $transition-width-mobile) {\n    flex-direction: column;\n    align-items: center;\n  }\n\n  .footer-left {\n    width: 30%;\n\n    img {\n      max-width: 400px;\n\n      @media screen and (max-width: $transition-width-large) {\n        max-width: 250px;\n      }\n    }\n\n    .footer-tag {\n      margin: 0 4rem;\n    }\n\n    @media screen and (max-width: $transition-width-mobile) {\n      display: none;\n    }\n  }\n\n  .footer-links {\n    width: 40%;\n    display: flex;\n    justify-content: space-evenly;\n\n    @media screen and (max-width: $transition-width-mobile) {\n      width: 100%;\n      flex-direction: column;\n      align-items: center;\n      text-align: center;\n    }\n\n    p {\n      margin: 2rem 1rem;\n\n      a {\n        &:hover,\n        &:focus,\n        &:active {\n          color: $dark-blue;\n        }\n      }\n\n      &:last-child {\n        margin: 0 1rem;\n      }\n    }\n  }\n\n  .footer-social-media {\n    width: 30%;\n    display: flex;\n    justify-content: flex-end;\n\n    @media screen and (max-width: $transition-width-mobile) {\n      width: 100%;\n      justify-content: center;\n      align-items: center;\n      margin-top: 1rem;\n    }\n\n    a {\n      display: block;\n      width: 30px;\n      height: 30px;\n      margin: 2rem 2rem 0 1rem;\n\n      .social-media-icon {\n        width: 30px;\n        height: 30px;\n      }\n    }\n  }\n}\n`\n\nconst Post = styled.div`\nh2, p {\n  font-size: 1.5rem;\n  font-family: 'Roboto', sans-serif;\n  font-weight: 300;\n  letter-spacing: 0.5px;\n\n  @media screen and (max-width: $transition-width-mobile) {\n    font-size: 1rem;\n    line-height: 1.5rem;\n  }\n}\n\np {\n  text-indent: 2em;\n}\n\nh2 {\n  font-weight: 800;\n  font-size: 2rem;\n}\n\nimg {\n  display: block;\n  margin: 3rem auto;\n  max-width: 30%;\n\n  @media screen and (max-width: $transition-width-mobile) {\n    margin: 0 auto;\n    max-width: 60%;\n  }\n}\n\n.post-tag {\n  margin: 2rem;\n  font-style: italic;\n\n  &:before {\n    content: \"- \"\n  }\n}\n`\n\nexport default function Header() {\n  return (\n    <StyledHeader>\n      <div className=\"header-highlight\">\n        <div className=\"blue-highlight\"></div>\n        <div className=\"orange-highlight\"></div>\n      </div>\n\n      <div className=\"header-logo-nav\">\n        <div className=\"container\">\n          <a href=\"/\">\n            <div className=\"header-logo\">\n              <h1>BC COVID-19 MSRT</h1>\n              <img src=\"/assets/images/elbows.png\"></img>\n              <h2>Medical Student Response Team</h2>\n            </div>\n          </a>\n        </div>\n\n        <div className=\"nav-links\">\n          <div className=\"dropdown\">\n            <input className=\"hamburger menu-btn\" type=\"checkbox\" id=\"menu-btn\"/>\n            <label className=\"hamburger menu-icon\" htmlFor=\"menu-btn\">\n              <span className=\"navicon-top\"></span>\n              <span className=\"navicon-mid\"></span>\n              <span className=\"navicon-bottom\"></span>\n            </label>\n\n            <div className=\"menu\">\n              <a className=\"nav-item highlight-link\" href=\"/\">HOME</a>\n              <a className=\"nav-item highlight-link\" href=\"/updates\">NEWS & UPDATES</a>\n              <a className=\"nav-item highlight-link\" href=\"/projects\">PROJECTS</a>\n              <a className=\"nav-item highlight-link\" href=\"/physicians\">FOR PHYSICIANS</a>\n              <a className=\"nav-item highlight-link\" href=\"/volunteer\">FOR MED STUDENTS</a>\n              <a className=\"nav-item highlight-link\" href=\"/everyone\">FOR EVERYONE</a>\n              <a className=\"nav-item highlight-link\" href=\"/about\">ABOUT</a>\n              <a className=\"nav-item highlight-link\" href=\"/contact\">CONTACT US</a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </StyledHeader>\n  )\n}\n","import React from 'react';\nimport './App.css';\nimport Header from './components/Header'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}